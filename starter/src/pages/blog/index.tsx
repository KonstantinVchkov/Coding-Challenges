import type { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import React, { useEffect, useState } from "react";
import BlogItem, { IBlogItem } from "../../components/BlogItem";
import PageTitle from "../../components/PageTitle";
import { API_KEY } from "..";
import { useRouter } from "next/router";
export interface IBlog {
  filteredProducts: IBlogItem[];
}
const Blog: NextPage<IBlog> = ({ filteredProducts }) => {
  const router = useRouter();
  const [displayedProducts, setDisplayedProducts] = useState<IBlogItem[]>([]);
  const [value, setValue] = useState<string>();
  useEffect(() => {
    setDisplayedProducts(filteredProducts);
  }, [filteredProducts]);
  const handleFilter = (type: "q" | "category_like", value: string) => {
    router.push({
      pathname: router.pathname,
      query: { [type]: value },
    });
  };
  const handleSubmit = () => {

  }
  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    setValue(e.target.value);
    router.push({
      pathname: router.pathname,
      query: { q: e.target.value },
    });
  };
  return (
    <>
      <Head>
        <title>Store - Blog</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <PageTitle title={"Blog"} />

      <section className="bg0 p-t-62 p-b-60">
        <div className="container">
          <div className="row">
            <div className="col-md-8 col-lg-9 p-b-80">
              <div className="p-r-45 p-r-0-lg">
                {/* blog item */}

                {displayedProducts.map((resBlog) => (
                  <BlogItem key={resBlog.id} {...resBlog} />
                ))}
                {/* <p>There are no results with your search.</p> */}
              </div>
            </div>

            <div className="col-md-4 col-lg-3 p-b-80">
              <div className="side-menu">
                <form className="bor17 of-hidden pos-relative" onSubmit={handleSubmit}>
                  <input
                    className="stext-103 cl2 plh4 size-116 p-l-28 p-r-55"
                    type="text"
                    name="search"
                    placeholder="Search"
                    value={value}
                    onChange={(e) => {
                      handleChange(e);
                    }}
                  />

                  <button className="flex-c-m size-122 ab-t-r fs-18 cl4 hov-cl1 trans-04">
                    <i className="zmdi zmdi-search"></i>
                  </button>
                </form>

                <div className="p-t-55">
                  <h4 className="mtext-112 cl2 p-b-33">Categories</h4>

                  <ul>
                    <li className="bor18">
                      <button
                        className="dis-block stext-115 cl6 hov-cl1 trans-04 p-tb-8 p-lr-4"
                        onClick={() => {
                          handleFilter("category_like", "fashion");
                        }}
                      >
                        Fashion
                      </button>
                    </li>

                    <li className="bor18">
                      <button
                        className="dis-block stext-115 cl6 hov-cl1 trans-04 p-tb-8 p-lr-4"
                        onClick={() => {
                          handleFilter("category_like", "beauty");
                        }}
                      >
                        Beauty
                      </button>
                    </li>

                    <li className="bor18">
                      <button
                        className="dis-block stext-115 cl6 hov-cl1 trans-04 p-tb-8 p-lr-4"
                        onClick={() => {
                          handleFilter("category_like", "streetstyle");
                        }}
                      >
                        Street Style
                      </button>
                    </li>

                    <li className="bor18">
                      <button
                        className="dis-block stext-115 cl6 hov-cl1 trans-04 p-tb-8 p-lr-4"
                        onClick={() => {
                          handleFilter("category_like", "lifestyle");
                        }}
                      >
                        Life Style
                      </button>
                    </li>

                    <li className="bor18">
                      <button
                        className="dis-block stext-115 cl6 hov-cl1 trans-04 p-tb-8 p-lr-4"
                        onClick={() => {
                          handleFilter("category_like", "diy");
                        }}
                      >
                        DIY & Crafts
                      </button>
                    </li>
                  </ul>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>
    </>
  );
};

export default Blog;

export const getServerSideProps: GetServerSideProps = async ({ query }) => {
  const initialCategory = (query.q || query.category_like) as string;
  const endpoint = `${API_KEY}/blogs`;

  const params = new URLSearchParams();
  if (initialCategory === "belt" || initialCategory === "streetstyle") {
    params.append("category_like", initialCategory);
  } else if (initialCategory) {
    params.append("q", initialCategory);
  }

  const response = await fetch(`${endpoint}?${params.toString()}`);
  const filteredProducts = await response.json();
  const resAllProducts = await fetch(`${API_KEY}/blogs`);
  const resBlogs = await resAllProducts.json();
  return {
    props: {
      resBlogs,
      filteredProducts,
    },
  };
};
