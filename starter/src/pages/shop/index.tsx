import type { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import { API_KEY } from "..";
import Link from "next/link";
import Image from "next/image";
import { useRouter } from "next/router";
import {  useEffect, useState } from "react";

export interface Product {
  id: string;
  price: string;
  title: string;
  gender: string;
  img: string;
  description: string;
}

export interface IShop {
  // products: Product[];
  filteredProducts: Product[];
  // category: string;
}
const Shop: NextPage<IShop> = ({
  filteredProducts
}) => {
  const router = useRouter();
  const [displayedProducts, setDisplayedProducts] = useState<Product[]>([]);
  const [value, setValue] = useState<string>();
  const activeRoute = router.asPath;
  const activeQuery = router.query;
  console.log(activeQuery)
  useEffect(() => {
    setDisplayedProducts(filteredProducts);
  }, [filteredProducts]);
  const handleFilter = (type: "q" | "gender_like" | "watch" | "converse", value: string) => {
    router.push({
      pathname: router.pathname,
      query: { [type]: value },
    });
  };
  const handleRemoveFilter = () => {
    router.push({
      pathname: router.pathname,
      query: {},
    });
  };
  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    setValue(e.target.value);
    router.push({
      pathname: router.pathname,
      query: { q: e.target.value }, 
    });
};
  return (
    <>
      <Head>
        <title>Store</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="bg0 m-t-23 p-b-140">
        <div className="container">
          <div className="flex-w flex-sb-m p-b-52">
            <div className="flex-w flex-l-m filter-tope-group m-tb-10">
              <button
                className={`stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5 ${activeRoute === "/shop" ? 'how-active1' : ''}`}
                data-filter="*"
                onClick={handleRemoveFilter}
              >
                All Products
              </button>

              <button
                className={`stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5 ${activeQuery.gender_like === "women" ? 'how-active1' : ''}`}
                data-filter=".women"
                onClick={() => {
                  handleFilter("gender_like", "women");
                }}
              >
                Women
              </button>

              <button
                className={`stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5 ${activeQuery.gender_like === "man" ? 'how-active1' : ''}`}
                data-filter=".men"
                onClick={() => {
                  handleFilter("gender_like", "man");
                }}
              >
                Men
              </button>

              <button
                className={`stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5 ${activeQuery.q === "belt" ? 'how-active1' : ''}`}
                data-filter=".bag"
                onClick={() => {
                  handleFilter("q", "belt");
                }}
              >
                Belt
              </button>

              <button
                className={`stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5 ${activeQuery.q === "converse" ? 'how-active1' : ''}`}
                data-filter=".shoes"
                onClick={() => {
                  handleFilter("q","converse")
                }}
              >
                Shoes
              </button>

              <button
                className={`stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5 ${activeQuery.q === "watch" ? 'how-active1' : ''}`}
                data-filter=".watches"
                onClick={() => {
                  handleFilter("q","watch")
                }}
              >
                Watches
              </button>
            </div>

            <div className="flex-w flex-c-m m-tb-10">
              <div className="flex-c-m stext-106 cl6 size-105 bor4 pointer hov-btn3 trans-04 m-tb-4 js-show-search show-search">
                <i className="icon-search cl2 m-r-6 fs-15 trans-04 zmdi zmdi-search"></i>
                Search
              </div>
            </div>

            {/* search */}
            <div className="panel-search w-full p-t-10 p-b-15">
              <div className="bor8 dis-flex p-l-15">
                <button className="size-113 flex-c-m fs-16 cl2 hov-cl1 trans-04">
                  <i className="zmdi zmdi-search"></i>
                </button>

                <input
                  className="mtext-107 cl2 size-114 plh2 p-r-15"
                  type="text"
                  name="search-product"
                  placeholder="Search"
                  value={value}
                  onChange={(e) => {
                    handleChange(e);
                  }}
                />
              </div>
            </div>
          </div>

          <div className="row isotope-grid">
            {/* THIS IS HOW IT HAS TO LOOK ONE PRODUCT CARD */}
            {displayedProducts.map((product) => {
              return (
                <Link key={product.id} href={`/shop/${product.id}`} passHref>
                  <div className="col-sm-6 col-md-4 col-lg-3 p-b-35 isotope-item women" >
                    <div className="block2">
                      <div className="block2-pic hov-img0">
                        <Image
                          src={`${product.img}`}
                          alt="IMG-PRODUCT"
                          width={100}
                          height={100}
                          layout="responsive"
                          priority
                        />

                        <a
                          href="#"
                          className="block2-btn flex-c-m stext-103 cl2 size-102 bg0 bor2 hov-btn1 p-lr-15 trans-04 js-show-modal1"
                        >
                          View Details
                        </a>
                      </div>

                      <div className="block2-txt flex-w flex-t p-t-14">
                        <div className="block2-txt-child1 flex-col-l ">
                          <a
                            href="product-detail.html"
                            className="stext-104 cl4 hov-cl1 trans-04 js-name-b2 p-b-6"
                          >
                            {product.title}
                          </a>

                          <span className="stext-105 cl3">{product.price}</span>
                        </div>
                      </div>
                    </div>
                  </div>
                </Link>
              );
            })}
          </div>

          <div className="flex-l-m flex-w w-full p-t-10 m-lr--7">
            <a
              href="#"
              className="flex-c-m how-pagination1 trans-04 m-all-7 active-pagination1"
            >
              1
            </a>

            <a href="#" className="flex-c-m how-pagination1 trans-04 m-all-7">
              2
            </a>

            <a href="#" className="flex-c-m how-pagination1 trans-04 m-all-7">
              3
            </a>
          </div>
        </div>
      </div>
    </>
  );
};

export default Shop;
export const getServerSideProps: GetServerSideProps = async ({ query }) => {
  const initialCategory = (query.q || query.gender_like) as string;
  const endpoint = `${API_KEY}/products`;

  const params = new URLSearchParams();
  if (initialCategory === "man" || initialCategory === "women") {
    params.append("gender_like", initialCategory);
  } else if (initialCategory) {
    params.append("q", initialCategory);
  }

  const response = await fetch(`${endpoint}?${params.toString()}`);
  const filteredProducts = await response.json();
  const resAllProducts = await fetch(`${API_KEY}/products`);
  const allProducts = await resAllProducts.json();

  return {
    props: {
      products: allProducts,
      filteredProducts,
    },
  };
};
